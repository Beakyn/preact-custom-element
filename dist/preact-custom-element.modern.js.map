{"version":3,"file":"preact-custom-element.modern.js","sources":["../src/index.js"],"sourcesContent":["import { h, cloneElement, render, hydrate } from 'preact';\n\nexport default function register(Component, tagName, propNames, options) {\n\tfunction PreactElement() {\n\t\tconst inst = Reflect.construct(HTMLElement, [], PreactElement);\n\t\tinst._vdomComponent = Component;\n\t\tinst._root = options && options.shadow ? inst.attachShadow({ mode: 'open' }) : inst;\n\n\t\t// Setup custom event\n\t\tconst handlerCustomEvent = (emitName, payload) => inst.dispatch(emitName, payload)\n\t\tinst._emitCustomEvent = handlerCustomEvent;\n\t\tObject.defineProperty(inst, 'handlerCustomEvent', {\n\t\t\tget() {\n\t\t\t\treturn handlerCustomEvent;\n\t\t\t},\n\t\t});\n\n\t\treturn inst;\n\t}\n\n\tPreactElement.prototype = Object.create(HTMLElement.prototype);\n\tPreactElement.prototype.constructor = PreactElement;\n\tPreactElement.prototype.connectedCallback = connectedCallback;\n\tPreactElement.prototype.attributeChangedCallback = attributeChangedCallback;\n\tPreactElement.prototype.disconnectedCallback = disconnectedCallback;\n\tPreactElement.prototype.dispatch = dispatch;\n\n\tpropNames =\n\t\tpropNames ||\n\t\tComponent.observedAttributes ||\n\t\tObject.keys(Component.propTypes || {});\n\n\tPreactElement.observedAttributes = propNames;\n\n\t// Keep DOM properties and Preact props in sync\n\tpropNames.forEach((name) => {\n\t\tObject.defineProperty(PreactElement.prototype, name, {\n\t\t\tget() {\n\t\t\t\treturn this._vdom.props[name];\n\t\t\t},\n\t\t\tset(v) {\n\t\t\t\tif (this._vdom) {\n\t\t\t\t\tthis.attributeChangedCallback(name, null, v);\n\t\t\t\t} else {\n\t\t\t\t\tif (!this._props) this._props = {};\n\t\t\t\t\tthis._props[name] = v;\n\t\t\t\t\tthis.connectedCallback();\n\t\t\t\t}\n\n\t\t\t\t// Reflect property changes to attributes if the value is a primitive\n\t\t\t\tconst type = typeof v;\n\t\t\t\tif (\n\t\t\t\t\tv == null ||\n\t\t\t\t\ttype === 'string' ||\n\t\t\t\t\ttype === 'boolean' ||\n\t\t\t\t\ttype === 'number'\n\t\t\t\t) {\n\t\t\t\t\tthis.setAttribute(name, v);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t});\n\n\treturn customElements.define(\n\t\ttagName || Component.tagName || Component.displayName || Component.name,\n\t\tPreactElement\n\t);\n}\n\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\t// eslint-disable-next-line no-unused-vars\n\tconst { context, children, ...rest } = props;\n\treturn cloneElement(children, rest);\n}\n\nfunction connectedCallback() {\n\t// Obtain a reference to the previous context by pinging the nearest\n\t// higher up node that was rendered with Preact. If one Preact component\n\t// higher up receives our ping, it will set the `detail` property of\n\t// our custom event. This works because events are dispatched\n\t// synchronously.\n\tconst event = new CustomEvent('_preact', {\n\t\tdetail: {},\n\t\tbubbles: true,\n\t\tcancelable: true,\n\t});\n\tthis.dispatchEvent(event);\n\tconst context = event.detail.context;\n\n\tthis._vdom = h(\n\t\tContextProvider,\n\t\t{\n\t\t\t...this._props,\n\t\t\temitEvent: this._emitCustomEvent,\n\t\t\tcontext\n\t\t},\n\t\ttoVdom(this, this._vdomComponent)\n\t);\n\t(this.hasAttribute('hydrate') ? hydrate : render)(this._vdom, this._root);\n}\n\nfunction toCamelCase(str) {\n\treturn str.replace(/-(\\w)/g, (_, c) => (c ? c.toUpperCase() : ''));\n}\n\nfunction attributeChangedCallback(name, oldValue, newValue) {\n\tif (!this._vdom) return;\n\t// Attributes use `null` as an empty value whereas `undefined` is more\n\t// common in pure JS components, especially with default parameters.\n\t// When calling `node.removeAttribute()` we'll receive `null` as the new\n\t// value. See issue #50.\n\tnewValue = newValue == null ? undefined : newValue;\n\tconst props = {};\n\tprops[name] = newValue;\n\tprops[toCamelCase(name)] = newValue;\n\tthis._vdom = cloneElement(this._vdom, props);\n\trender(this._vdom, this._root);\n}\n\nfunction disconnectedCallback() {\n\trender((this._vdom = null), this._root);\n}\n\nfunction dispatch(eventName, payload) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst callback = (result, error) => {\n\t\t\tif (error !== undefined) {\n\t\t\t\treject(error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(result);\n\t\t};\n\t\tthis.dispatchEvent(\n\t\t\tnew CustomEvent(eventName, {\n\t\t\t\tbubbles: true,\n\t\t\t\tdetail: { callback, payload },\n\t\t\t})\n\t\t);\n\t});\n}\n\n/**\n * Pass an event listener to each `<slot>` that \"forwards\" the current\n * context value to the rendered child. The child will trigger a custom\n * event, where will add the context value to. Because events work\n * synchronously, the child can immediately pull of the value right\n * after having fired the event.\n */\nfunction Slot(props, context) {\n\tconst ref = (r) => {\n\t\tif (!r) {\n\t\t\tthis.ref.removeEventListener('_preact', this._listener);\n\t\t} else {\n\t\t\tthis.ref = r;\n\t\t\tif (!this._listener) {\n\t\t\t\tthis._listener = (event) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tevent.detail.context = context;\n\t\t\t\t};\n\t\t\t\tr.addEventListener('_preact', this._listener);\n\t\t\t}\n\t\t}\n\t};\n\treturn h('slot', { ...props, ref });\n}\n\nfunction toVdom(element, nodeName) {\n\tif (element.nodeType === 3) return element.data;\n\tif (element.nodeType !== 1) return null;\n\tlet children = [],\n\t\tprops = {},\n\t\ti = 0,\n\t\ta = element.attributes,\n\t\tcn = element.childNodes;\n\tfor (i = a.length; i--; ) {\n\t\tif (a[i].name !== 'slot') {\n\t\t\tprops[a[i].name] = a[i].value;\n\t\t\tprops[toCamelCase(a[i].name)] = a[i].value;\n\t\t}\n\t}\n\n\tfor (i = cn.length; i--; ) {\n\t\tconst vnode = toVdom(cn[i], null);\n\t\t// Move slots correctly\n\t\tconst name = cn[i].slot;\n\t\tif (name) {\n\t\t\tprops[name] = h(Slot, { name }, vnode);\n\t\t} else {\n\t\t\tchildren[i] = vnode;\n\t\t}\n\t}\n\n\t// Only wrap the topmost node with a slot\n\tconst wrappedChildren = nodeName ? h(Slot, null, children) : children;\n\treturn h(nodeName || element.nodeName.toLowerCase(), props, wrappedChildren);\n}\n"],"names":["ContextProvider","props","this","getChildContext","context","children","rest","cloneElement","connectedCallback","event","CustomEvent","detail","bubbles","cancelable","dispatchEvent","_vdom","h","_props","emitEvent","_emitCustomEvent","toVdom","element","nodeName","nodeType","data","i","a","attributes","cn","childNodes","length","name","value","toCamelCase","vnode","slot","Slot","wrappedChildren","toLowerCase","_vdomComponent","hasAttribute","hydrate","render","_root","str","replace","_","c","toUpperCase","attributeChangedCallback","oldValue","newValue","undefined","disconnectedCallback","dispatch","eventName","payload","Promise","resolve","reject","callback","result","error","ref","r","_listener","stopPropagation","addEventListener","removeEventListener","Component","tagName","propNames","options","PreactElement","inst","Reflect","construct","HTMLElement","shadow","attachShadow","mode","handlerCustomEvent","emitName","Object","defineProperty","get","prototype","create","constructor","observedAttributes","keys","propTypes","forEach","set","v","type","setAttribute","customElements","define","displayName"],"mappings":"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"}